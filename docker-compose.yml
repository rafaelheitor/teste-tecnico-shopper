services:
  backend:
    container_name: 'backend'
    build: ./backend/
    networks:
      - teste-shopper
    ports:
      - 8080:8080
    env_file:
      - ./.env
    restart: unless-stopped
    depends_on:
      - db
    entrypoint: ./docker-entrypoint.sh

  frontend:
    container_name: 'frontend'
    build:
      context: ./frontend/
      dockerfile: Dockerfile
    networks:
      - teste-shopper
    ports:
      - 80:80
    env_file:
      - ./.env
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_GOOGLE_API_KEY=${GOOGLE_API_KEY}

  db:
    image: postgres:13-alpine
    container_name: db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123
      - POSTGRES_DB=teste-shopper
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - teste-shopper
    ports:
      - 5432:5432

volumes:
  backend:
  postgres_data:


networks:
  teste-shopper:
    name: teste-shopper
    driver: bridge
